=====================Struct and Header Info========================
Struct name is headers

Struct name is metadata
member variable name is stateful_fw_key
bit<32> stateful_fw_key whose size is 32 bits 
member variable name is array_index
bit<32> array_index whose size is 32 bits 
member variable name is src
bit<32> src whose size is 32 bits 
member variable name is dst
bit<32> dst whose size is 32 bits 
member variable name is drop
bit<32> drop whose size is 32 bits 

=====================Table Info========================
table name is stateful_fw
no. 1 key is meta.stateful_fw_key; with match type exact;
table size is 1
table action list is { set_pkt; }

=====================Control Block Info========================
prepare to output control
control block name is MyVerifyChecksum
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is ingress
control block body is { stateful_fw.apply(); }
control->body->components.size() = 1
Balabala
prepare to output control
control block name is egress
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is MyComputeChecksum
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is MyDeparser
control block body is { }
control->body->components.size() = 0
Balabala
=====================Action Info========================
This is an atomic construct
value_str =   established.read
value_str =   established.write
Domino program = 
struct Packet {
int array_index;
int drop;
int dst;
int src;
};
int established;
void func(struct Packet pkt) {
{ pkt.array_index = pkt.src + pkt.dst;
  if (pkt.src == 20) {
    { established = 1; }
  } else {
    { if (pkt.dst == 20) {
        { if (established == 0) {
            { pkt.drop = 1; }
          } else {
            { pkt.drop = 0; } } } } } } }}

Control block name is MyVerifyChecksum
Control block name is ingress
Control block name is egress
Control block name is MyComputeChecksum
Control block name is MyDeparser