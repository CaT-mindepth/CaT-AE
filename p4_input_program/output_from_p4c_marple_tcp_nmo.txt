=====================Struct and Header Info========================
Struct name is headers

Struct name is metadata
member variable name is marple_tcp_nmo_key
bit<32> marple_tcp_nmo_key whose size is 32 bits 
member variable name is tcpseq
bit<32> tcpseq whose size is 32 bits 

=====================Table Info========================
table name is marple_tcp_nmo
no. 1 key is meta.marple_tcp_nmo_key; with match type exact;
table size is 1
table action list is { set_pkt; }

=====================Control Block Info========================
prepare to output control
control block name is MyVerifyChecksum
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is ingress
control block body is { marple_tcp_nmo.apply(); }
control->body->components.size() = 1
Balabala
prepare to output control
control block name is egress
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is MyComputeChecksum
control block body is { }
control->body->components.size() = 0
Balabala
prepare to output control
control block name is MyDeparser
control block body is { }
control->body->components.size() = 0
Balabala
=====================Action Info========================
This is an atomic construct
value_str =   count.read
value_str =   maxseq.read
value_str =   count.write
value_str =   maxseq.write
Domino program = 
struct Packet {
int tcpseq;
};
int count;
int maxseq;
void func(struct Packet pkt) {
{ if (pkt.tcpseq < maxseq) {
    { count = count + 1; }
  } else {
    { maxseq = pkt.tcpseq; } } }}

Control block name is MyVerifyChecksum
Control block name is ingress
Control block name is egress
Control block name is MyComputeChecksum
Control block name is MyDeparser